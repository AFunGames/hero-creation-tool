/*This is the reference document for background jsons
    Name: Alexander Sedore
    Date: 2/9/21
    Ver: 0.1
*/

Tree Diagram:

0 : {}
    name: string // name of the background
    source: string // name of the book that the background belongs to acronym, for ex. PHB == Players Hand Book
    srd: boolean // true or false if the background is considered SRD material if Null -> false
    
    entries : [x] // Important entries used to fill the tab
        /*
        Order of entries, if they do not exist then the backround does not give any bonuses in that field
         - Skill Proficiences
         - Languages
         - Equoment
         - Features (1 -> y)
         - Suggested Characteristics
        */     
        0 -> (x - 1): {}
            name : string // name of the entry
            entry :  String  // for Skill Proficiences - reference skilProficiencies for which skills to assign as proficent
                     String  // for Languages - reference languageProficiencies for which languages to display as proficient/list
            
            entries : [String] // for features, with list of discription of the feature

            entries : [5] // For Suggested Characteristics
                0 : String // Description of the backgrounds ideals, bonds and flaws to give players ideas.
                
                1 - 4: {2} // Table outline for Personality Trait, Ideals, Bonds and
                    colLabels : [x] x tells how many collums are in the table
                        0 -> (x - 1) : String // description for the column lable for column
                    rows : [y] y tells how many rows are in the table
                        0 -> (y - 1) : [x]
                            0 -> (x - 1) : String // each column discription for each row

            isFeature : Boolean // boolean value to check if the entrie represents a feature so we can create a feature entry in the character sheet. IF isFeature == Null then entry does not represent a feature.
    skilProficiencies : [1]
        0 : {x} //  x is the number of skills the backroung gives proficiency in
            [name of skill] : boolean // boolean value showing the background gives proficiency in in
    

    languageProficiencies : [1]
        0 : {x} // x is the number of features
            either [name of the language] : boolean // boolean value showing which language the background gives proficiency in
            or
            anyStandard/anyExotic/any : interger // saying how many languages of the specific type the user gets to choose for themself
    

    startingEquipment : [y] // depends on how many choices the player must make
        0 : {1}
            def : [x] // x is the number of default equipment the background gives
                0 -> (x - 1) : {}
                    item : String // an item reference for which item you can pass to the starting equipment tab [name of item] | [book code] Ex. clothes|phb
                    displayName: String // represents what the title of the created item in foundry will be in the character sheet
                    containsValue : integer // represents any coin value the item contains or is valued at in base of copper coins
                    special : String // indecates the item does not exist in the database and means you just need to create a item with the name of special's String
                    quantity : interger // indicates how many of this item the background gives
        
        1 -> (y - 2) : {w} // w = the number of choices
            a -> z : [1] // choice a, b, c...up to choice z depends on how many choices.
                0 : {}
                    item : String // an item reference for which item you can pass to the starting equipment tab [name of item] | [book code] Ex. clothes|phb
                    displayName: String // represents what the title of the created item in foundry will be in the character sheet
                    containsValue : integer // represents any coin value the item contains or is valued at in base of copper coins
                    special : String // indecates the item does not exist in the database and means you just need to create a item with the name of special's String
                    quantity : interger // indicates how many of this item the background gives